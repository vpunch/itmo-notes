import List;

var s1 = Foo (1, 2, 3);
var s2 = Bar ("4", "5");

fun check (s) {
  printf("%s\n",
    case s of
      Foo (i1, i2, i3) -> i1 + i2 + i3 |  -- должен быть определен
      Bar (s1, s2) -> s1 ++ s2  -- конкатенация строк только так
    esac.string  -- нужно явно приводить тип
  );

  s[0] := "hello"  -- для присвоения свой оператор
}  -- после тела разделитель не нужен

fun one () {1}  -- значение возвращать так

var a1 = [1, 2, 3];
var a2 = [1, 2];

-- Передача по ссылке
check(s1);  -- 6
check(s2);  -- "45"
-- Согласно dot-нотации, foo (e1, ..., ei) = e1.foo (e2, ..., ei)
printf(string (s1) ++ "\n");  -- Foo ("hello", 2, 3)

printf((a1 +++ a2).string ++ "\n");

printf((one() + 1).string ++ "\n")  -- 2
