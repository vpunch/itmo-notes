# GAS (GNU Assembler)
# gcc -m32 -o test test.s && ./test

# Сегмент данных. Часть программы, где хранятся статические переменные
        .data

# Директива .string или .int выделяет память под соответствующие данные и
# инициализирует ее
str:    .string "%d\n"
x:      .int    0

# Сделать символ main видимым линковщику, чтобы другие объектные файлы могли
# его использовать
# Символ, метка (label) и память -- синонимы
        .global main

        .text  # сегмент с выполняемыми инструкциями (только для чтения)

# esp -- указатель стека (содержит адрес вершины). Стек растет вверх

# ebp -- база фрейма стека. Фрейм -- это часть стека, которая используется
# вызванной подпрограммой (локальный стек). Регистр управляется вручную

# eax -- для хранения промежуточных результатов

# Регистры глобальны для всех подпрограмм. Подпрограмма обязана самостоятельно
# удалить свои локальные данные из стека (аргументы удаляет вызывающая
# подпрогармма)

# 1        -- абсолютный адрес
# $1       -- литерал
# var      -- значение в памяти
# $var     -- адрес значения в памяти
# %reg     -- значение в регистре
# 16(%reg) -- смещение адреса в регистре на 16 байт

# pushl o     -- перемещение в стек
# call p      -- вызов подпрограммы
# addl o1, o2 -- прибавить o1 к o2
# movl o1, o2 -- копировать o1 в o2
# ret         -- выход из подпрограммы


main:
    pushl   x           # передача по значению
    pushl   $str        # передача по ссылке
    call    printf
    addl    $8, %esp    # удаляем переданные аргументы из стека

    movl    $42, x

    pushl   x
    pushl   $str
    call    printf
    addl    $8, %esp

    # mem2mem
    pushl $2
    pushl $3
    movl $5, %eax
    #cmpl $30, %eax
    seta %eax

    ret
